<program> ::= { <statement> }

<statement> ::= <remember_block>
              | <leak_stmt>
              | <trace_stmt>
              | <link_stmt>
              | <affect_stmt>
              | <if_block>
              | <elif_block>
              | <else_block>
              | <match_block>
              | <switch_block>
              | <cycle_block>
              | <flow_block>
              | <signal_stmt>
              | <respond_block>
              | <import_eid_stmt>
              | <type_decl>
              | <return_stmt>
              | <session_block>
              | <comment>

<remember_block> ::= "remember" "{" <emotion_pair> { "," <emotion_pair> } "}"
<emotion_pair> ::= <emotion_key> ":" <float>
<emotion_key> ::= "λᴱ" | "ψᵢ" | "λᶠ" | "Φᴳᵇ"

<leak_stmt> ::= "leak" <identifier> [ "." <method> "(" [<args>] ")" ]

<trace_stmt> ::= "trace session"
<link_stmt> ::= "link" <identifier> "←" <identifier>
<affect_stmt> ::= "affect" <emotion_key> <affect_op>

<affect_op> ::= "shift" <float>
              | "diminish" <float>
              | "amplify" <float>
              | "bleed" <identifier>
              | "=" <identifier> <operator> <float>

<if_block> ::= "if" <condition> "{" <program> "}"
<elif_block> ::= "elif" <condition> "{" <program> "}"
<else_block> ::= "else" "{" <program> "}"
<condition> ::= <emotion_key> <comparison_op> <float>

<match_block> ::= "match" <emotion_key> "{" { <case_clause> } "}"
<case_clause> ::= "case" <comparison_op> <float> "{" <program> "}"

<switch_block> ::= "switch" <identifier> "{" { <case_string> } [<default_clause>] "}"
<case_string> ::= "case" <string> "{" <program> "}"
<default_clause> ::= "default" "{" <program> "}"

<cycle_block> ::= "cycle" <identifier> "{" <program> "until" <condition> "}"
<flow_block> ::= "flow" <identifier> "{" <program> "}"

<return_stmt> ::= "return" <identifier>
<session_block> ::= "session" <identifier> ":" <program>

<signal_stmt> ::= "signal" <string> "→" <identifier>
<respond_block> ::= "respond" "to" <string> "{" <program> "}"

<import_eid_stmt> ::= "import_eid" <string>
<type_decl> ::= "type" <identifier> ":" "eid"

<identifier> ::= letter { letter | digit | "_" }
<method> ::= <identifier>
<args> ::= <string> { "," <string> }

<float> ::= digit+ "." digit+
<string> ::= '"' { any character except '"' } '"'
<comment> ::= "#" { any character }

<operator> ::= "+" | "-" | "*" | "/"
<comparison_op> ::= ">" | "<" | ">=" | "<=" | "==" | "!="