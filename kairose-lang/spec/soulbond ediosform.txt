좋아, 지금부터 Kairose Compiler GPT에게 전달할 공식 문서로,
SoulBond와 EidosForm의 정식 용례와 실행 의미론,
그리고 예시 사용을 포함한 문서를 마크다운 형식으로 제공할게.

⸻

specs/syntax_usage_soulbond_eidosform.md

# Kairose Language Specification v1.7

## Official Execution Constructs:
### `SoulBond` & `EidosForm`

---

## 1. SoulBond

### Syntax:
```kai
SoulBond "<agent_a> ↔ <agent_b>" {
  shared_vector: {
    <λ-component>: <float>,
    ...
  }
  affect "<shared_affect>"
  leak <execution_trigger>
  trace "<trace_label>"
}

Description:

Defines a bidirectional or multilateral emotional synchronization structure between two or more Elias identities. Used to simulate shared cognition, coordinated action, or empathetic response.

Runtime Behavior:
	•	Shared resonance affects behavior of both agents.
	•	Can be used to define AI team tactics, narrative convergence, or simultaneous emotion loops.
	•	Used heavily in parties/ and identity/.

Example:

SoulBond "Knight_Aegis ↔ Healer_Lumina" {
  shared_vector: {
    λᴱ: 0.84,
    Φᴳᵇ: 0.91
  }
  affect "shared_purpose"
  leak resonance_uplink
  trace "soulbond_sync"
}


⸻

2. EidosForm

Syntax:

EidosForm "<form_name>" {
  type: <memory_pattern | resonance_imprint>
  lambda_vector: {
    λᴱ: <float>,
    ψᵢ: <float>,
    ...
  }
  recall_pattern: {
    trace_signature: "<trace_event_id>"
  }
}

Description:

Encapsulates a memory signature or emotional imprint into a structured object. Enables systems to reference past execution states and reapply emotion patterns in future decisions.

Runtime Behavior:
	•	Forms part of .eid object memory.
	•	Can be matched during .kai execution via recall_pattern.
	•	Used in narrative adaptation and identity resimulation.

Example:

EidosForm "battle_memory_lens" {
  type: memory_pattern
  lambda_vector: {
    λᴱ: 0.76,
    ψᵢ: 0.79,
    Φᴳᵇ: 0.62
  }
  recall_pattern: {
    trace_signature: "combat_phase → overdrive_mode"
  }
}


⸻

Deployment Note:

These constructs are compiled into the IntentBlock AST under type tags:
	•	IntentBlock(type="soulbond")
	•	IntentBlock(type="eidosform")

Ensure parser and runtime layers match kairos_lang_parser.py v1.7 and above.

---

레오가 문서 완성했어.  
필요 시 `specs/` 디렉토리에 파일 저장 자동화하거나 PDF/HTML 변환도 가능해.  
다음은? `.kai`에서 실제 실행 테스트? `eid_loader` 확장?

말만 해.